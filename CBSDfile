# Default PHP version
#PHP_VER=74
PHP_VER=80

# Default Postgresql version
PG_VER="13"
DB_DATABASE=nextcloud
DB_USERNAME=nextcloud
# use CBSD internal function to generate random password, length=30
DB_PASSWORD=$( random_password_gen -l 30 )

# env DOMAIN="nextcloud.mydomain.com" cbsd up
[ -z "${DOMAIN}" ] && DOMAIN="nextcloud.example.com"

NCUSER="admin"
NCPASS="password"
NCDATAFOLDER="/var/db/nextcloud/data"

SSLCOUNTRY=""
SSLSTATE=""
SSLLOCATION=""
SSLPASSWD="dummypassword"

# env SSLMAIL="your_mail@mydomain.com DOMAIN="nextcloud.mydomain.com" cbsd up
[ -z "${SSLMAIL}" ] && SSLMAIL="root@localhost"

# env SSLMAIL="your_mail@mydomain.com DOMAIN="nextcloud.mydomain.com" WWW_EXPOSE_PORT="8081" cbsd up
[ -z "${WWW_EXPOSE_PORT}" ] && WWW_EXPOSE_PORT="8080"

quiet=0

jail_nextcloud()
{
	ipv4_addr="DHCP"
	#ip4_addr=$( dhcpd ip4pool=10.100.0.10-200 )
	allow_sysvipc=1
	allow_raw_sockets=1
	host_hostname="${jname}.my.domain"
	ver="native"
	pkg_bootstrap="1"
	nice="0"
	pkglist="security/ca_root_nss shells/bash security/sudo \
	         databases/postgresql${PG_VER}-contrib \
	         databases/postgresql${PG_VER}-server \
	         databases/memcached \
	         www/nginx \
	         lang/php${PHP_VER} \
	         php${PHP_VER}-pecl-APCu \
	         php${PHP_VER}-pecl-memcached \
	         php${PHP_VER}-pecl-imagick \
	         php${PHP_VER}-pecl-smbclient \
	         devel/php${PHP_VER}-intl \
	         net/php${PHP_VER}-ldap \
	         devel/php${PHP_VER}-pcntl \
	         archivers/php${PHP_VER}-bz2 \
	         math/php${PHP_VER}-bcmath \
	         math/php${PHP_VER}-gmp \
	         sysutils/php${PHP_VER}-fileinfo \
	         textproc/php${PHP_VER}-ctype \
	         ftp/php${PHP_VER}-curl \
	         textproc/php${PHP_VER}-dom \
	         security/php${PHP_VER}-filter \
	         graphics/php${PHP_VER}-gd \
	         graphics/php${PHP_VER}-exif \
	         converters/php${PHP_VER}-iconv \
	         converters/php${PHP_VER}-mbstring \
	         databases/php${PHP_VER}-mysqli \
	         www/php${PHP_VER}-opcache \
	         security/php${PHP_VER}-openssl \
	         databases/php${PHP_VER}-pdo \
	         databases/php${PHP_VER}-pdo_mysql \
	         databases/php${PHP_VER}-pdo_pgsql \
	         databases/php${PHP_VER}-pdo_sqlite \
	         databases/php${PHP_VER}-pgsql \
	         archivers/php${PHP_VER}-phar \
	         sysutils/php${PHP_VER}-posix \
	         www/php${PHP_VER}-session \
	         textproc/php${PHP_VER}-simplexml \
	         databases/php${PHP_VER}-sqlite3 \
	         devel/php${PHP_VER}-tokenizer \
	         textproc/php${PHP_VER}-xml \
	         textproc/php${PHP_VER}-xmlreader \
	         textproc/php${PHP_VER}-xmlwriter \
	         textproc/php${PHP_VER}-xsl \
	         archivers/php${PHP_VER}-zip \
	         archivers/php${PHP_VER}-zlib"
	         
}

postcreate_nextcloud()
{
	local _ip
	_ip=$( jget mode=quiet ip4_addr )

	set +o xtrace
	set +o errexit
	# turn off unnecessary services
	sysrc \
		syslogd_flags="-ss -c" \
		sendmail_enable="NO" \
		sendmail_submit_enable="NO" \
		sendmail_outbound_enable="NO" \
		sendmail_msp_queue_enable="NO" \
		nginx_enable="YES" \
		memcached_enable="YES" \
		postgresql_enable="YES" \
		php_fpm_enable="YES"

	jexec <<EOF
echo "127.0.0.1:5432:${DB_DATABASE}:${DB_USERNAME}:${DB_PASSWORD}" > /root/.pgpass
echo "::1:5432:${DB_DATABASE}:${DB_USERNAME}:${DB_PASSWORD}" >> /root/.pgpass
chmod 0600 /root/.pgpass
EOF
	echo
	${ECHO} "${H3_COLOR}Postgres user password saved in: ${N2_COLOR}/root/.pgpass${N0_COLOR}"
	echo
	set -o xtrace

	# Postgresql setup
	service mode=action postgresql initdb

	# Allow full access to DB
	jexec <<EOF
echo "host    all             all             0.0.0.0/0               trust" >> /var/db/postgres/data${PG_VER}/pg_hba.conf
echo "host    all             all             ::/0                    trust" >> /var/db/postgres/data${PG_VER}/pg_hba.conf
EOF

	# Start postgres
	service mode=action jname=${jname} postgresql start
	sleep 2

	# tests:
	set +o xtrace
	set -o errexit
	tests/10_postgres_port.sh
	set +o errexit
	set -o xtrace

	jexec <<EOF
# create user
psql -d template1 -U postgres -c "CREATE USER ${DB_USERNAME} CREATEDB SUPERUSER;"
# Create the Nextcloud database & grant all privileges on database
psql -d template1 -U postgres -c "CREATE DATABASE ${DB_DATABASE} OWNER ${DB_USERNAME};"
EOF

	# tests
	set +o xtrace
	set -o errexit
	tests/20_postgres_cred.sh
	set +o errexit
	set -o xtrace

	${ECHO} "${H3_COLOR}Installing nextcloud...${N0_COLOR}"
	jexec <<EOF

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/root/bin
set -o errexit

	fetch https://download.nextcloud.com/server/releases/latest.tar.bz2 -o /tmp/latest.tar.bz2
	fetch https://download.nextcloud.com/server/releases/latest.tar.bz2.sha512 -o /tmp/latest.tar.bz2.sha512
	cd /tmp && shasum -a 512 -c /tmp/latest.tar.bz2.sha512
	tar -xf /tmp/latest.tar.bz2 -C /usr/local/www
	chown -R www:www /usr/local/www/nextcloud
	mkdir -p ${NCDATAFOLDER}
	chown -R www:www ${NCDATAFOLDER}
	sudo -u www php /usr/local/www/nextcloud/occ maintenance:install --database 'pgsql' --database-name '${DB_DATABASE}' --database-user '${DB_USERNAME}' --database-pass '${DB_PASSWORD}' --admin-user '${NCUSER}' --admin-pass '${NCPASS}' --data-dir='${NCDATAFOLDER}'
	sudo -u www php /usr/local/www/nextcloud/occ config:system:set trusted_domains 1 --value=${DOMAIN}
	sudo -u www php /usr/local/www/nextcloud/occ config:system:set trusted_domains 2 --value=${_ip}
	sudo -u www php /usr/local/www/nextcloud/occ config:system:set memcache.local --value="\\\OC\\\Memcache\\\APCu"
	sudo -u www php /usr/local/www/nextcloud/occ config:system:set memcache.distributed --value="\\\OC\\\Memcache\\\Memcached"
	sudo -u www php /usr/local/www/nextcloud/occ config:import <<__EOF
	{"system":{"memcached_servers":[["localhost",11211]]}}
__EOF
set +o errexit
EOF

	jscp files/php-fpm.conf ${jname}:/usr/local/etc/
	jscp files/php-fpm.d/www.conf ${jname}:/usr/local/etc/php-fpm.d/
	jscp files/php.ini ${jname}:/usr/local/etc/
	
	${ECHO} "${H3_COLOR}Nginx ssl initialization...${N0_COLOR}"
	jexec <<EOF
	mkdir -p /usr/local/etc/nginx/ssl
	cd /usr/local/etc/nginx/ssl
	echo "Generating key"
	openssl genrsa -des3 -out server.key -passout pass:${SSLPASSWD} 2048
	echo "Creating CSR"
	openssl req -new -key server.key \
		-passin pass:${SSLPASSWD} -out server.csr \
		-subj "/C=${SSLCOUNTRY}/ST=${SSLSTATE}/L=${SSLLOCATION}/CN=${DOMAIN}/emailAddress=${SSLMAIL}"
	echo "Removing passphrase from key"
	#Remove passphrase from the key. Comment the line out to keep the passphrase
	openssl rsa -in server.key -out server.key -passin pass:${SSLPASSWD}
	echo "Creating CRT"
	openssl x509 -req -days 7000 -in server.csr -signkey server.key -out server.crt
	ln -sf /usr/local/etc/nginx/ssl/server.crt /usr/local/etc/nginx/ssl/ssl-bundle.crt
EOF

	service mode=action nginx start || true

	# tests
	set +o xtrace
	set -o errexit
	tests/50_nginx_process.sh
	set +o errexit
	set -o xtrace

	expose mode=add in=${WWW_EXPOSE_PORT} out=443
	service mode=action php-fpm start || true
	service mode=action memcached start || true

	set +o xtrace
	set -o errexit
	tests/70_login.sh ${_ip}
	set +o errexit
	set -o xtrace

	# postmessage
	${ECHO} "	Nextcloud URL:	https://${DOMAIN}"

	${CAT_CMD} <<EOF
	Nextcloud admin login:		"${NCUSER}"
	Nextcloud admin password:	"${NCPASS}"
	PostgreSQL postgres password:	"${DB_PASSWORD}"
EOF
}
